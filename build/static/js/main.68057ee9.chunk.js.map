{"version":3,"sources":["components/header.jsx","components/search.jsx","components/my_list.jsx","App.jsx","store/store.js","index.jsx"],"names":["Header","useState","url","setUrl","className","to","onClick","connect","state","testStore","props","dispatch","searchTypeSearchInput","setSearchTypeSearchInput","searchLanguageInput","setSearchLanguageInput","searchTypeInput","setSearchTypeInput","tr","setTr","test","setTest","view","setView","zapros","a","axios","get","params","type","q","zap","payload","data","items","value","onChange","e","target","placeholder","aria-label","id","search","map","key","classButton","i","list","length","Number","checkList","object","addToList","checked","name","description","language","path","component","Search","MyList","store","createStore","action","newState","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68057ee9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, HashRouter } from 'react-router-dom';\nimport '../style/header.css';\n\nconst Header = () => {\n  const [url, setUrl] = useState('http://localhost:3000/search');\n\n  return (\n    <HashRouter>\n      <div>\n        <nav className=\"nav\">\n          <div className=\"nav_logo\">\n            <div className=\"nav_logo_icon\">\n              <i className=\"fab fa-github\" />\n              <i className=\"fas fa-search\" />\n            </div>\n\n            <div className=\"nav_logo_text\">\n              <h3 className=\"nav_logo_text_git\">GitHub</h3>\n              <h6 className=\"nav_logo_text_search\">Search</h6>\n            </div>\n          </div>\n\n          <div className=\"nav_menu\">\n            <Link to=\"/search\" className={url === 'http://localhost:3000/search' ? 'nav_menu_search_active' : 'nav_menu_search'} onClick={() => setUrl('http://localhost:3000/search')}>Search</Link>\n            <Link to=\"/my-list\" className={url === 'http://localhost:3000/my-list' ? 'nav_menu_mylist_active' : 'nav_menu_mylist'} onClick={() => setUrl('http://localhost:3000/my-list')}>My list</Link>\n          </div>\n        </nav>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../style/search.css';\n\nconst Search = (props) => {\n  const { testStore } = props;\n  const { dispatch } = props;\n\n  const [searchTypeSearchInput, setSearchTypeSearchInput] = useState('');\n  const [searchLanguageInput, setSearchLanguageInput] = useState('');\n  const [searchTypeInput, setSearchTypeInput] = useState('');\n  const [tr, setTr] = useState(false);\n  const [test, setTest] = useState(false);\n  const [view, setView] = useState(true);\n\n  const zapros = async () => {\n    const url = 'https://api.github.com/search/repositories';\n    const zap = await axios.get(url, {\n      params: {\n        type: searchTypeInput,\n        q: `${searchTypeSearchInput}+language:${searchLanguageInput}`,\n      },\n    });\n    dispatch({ type: 'SEARCH', payload: zap.data.items });\n    return zap;\n  };\n\n  const addToList = (key) => {\n    const object = key;\n    for (let i = 0; i < testStore.list.length; i += 1) {\n      if (testStore.list[i].id === key.id) {\n        dispatch({\n          type: 'DEL_REP',\n          payload: i,\n        });\n        setTest(!test);\n        return 0;\n      }\n    }\n    dispatch({\n      type: 'ADD_REP',\n      payload: object,\n    });\n    setTest(!test);\n    return 0;\n  };\n\n  const checkList = (key) => {\n    let classButton = 'content_repositori_content_checkbox_view';\n    for (let i = 0; i < testStore.list.length; i += 1) {\n      if (Number(testStore.list[i].id) === Number(key.id)) {\n        classButton = 'content_repositori_content_checkbox_view_remove';\n      }\n    }\n    return classButton;\n  };\n\n  return (\n    <div>\n      <div className=\"search\">\n        <div className=\"search_type\">\n          <select className=\"search_type_input\" value={searchTypeInput} onChange={(e) => setSearchTypeInput(e.target.value)}>\n            <option>Repositories</option>\n          </select>\n        </div>\n        <div className=\"search_language\">\n          <select className=\"search_language_input\" placeholder=\"Language\" value={searchLanguageInput} onChange={(e) => setSearchLanguageInput(e.target.value)}>\n            <option>Language</option>\n            <option>JavaScript</option>\n            <option>css</option>\n            <option>html</option>\n            <option>php</option>\n            <option>ruby</option>\n            <option>c++</option>\n            <option>python</option>\n            <option>c#</option>\n            <option>java</option>\n            <option>go</option>\n            <option>haskel</option>\n          </select>\n        </div>\n\n        <div className=\"search_typeSearch\">\n          <input className=\"search_typeSearch_input\" placeholder=\"Type here for search\" value={searchTypeSearchInput} onChange={(e) => setSearchTypeSearchInput(e.target.value)} />\n        </div>\n        <button\n          type=\"button\"\n          className=\"search_button\"\n          onClick={async () => {\n            await zapros();\n            setTr(true);\n            setTest(!test);\n          }}\n        >\n          SEARCH\n        </button>\n      </div>\n\n      <div className=\"view\">\n        <button type=\"button\" aria-label=\"Mute volume\" id=\"largeBtn\" className={view ? 'fas fa-th-large' : 'fas fa-th-large fa_th_large'} onClick={() => setView(false)} />\n        <button type=\"button\" aria-label=\"Mute volume\" id=\"barsBtn\" className={view ? 'fas fa-bars fa_bars' : 'fas fa-bars'} onClick={() => setView(true)} />\n      </div>\n\n      <div className={view ? 'content' : 'content_view'}>\n        {testStore.search.map((key) => {\n          const classButton = checkList(key);\n          return (\n            <div className={view ? 'content_repositori' : 'content_repositori_view'}>\n              <div className={view ? 'content_repositori_content' : 'content_repositori_content_view'}>\n                <div className={view ? 'content_repositori_content_input' : 'content_repositori_content_input_view'}>\n                  <input\n                    type={view ? 'checkbox' : 'button'}\n                    id={key.id}\n                    className={view ? 'content_repositori_content_checkbox' : classButton}\n                    onClick={() => addToList(key)}\n                    value={classButton === 'content_repositori_content_checkbox_view_remove' ? 'REMOVE ITEM' : 'ADD TO LIST'}\n                    checked={classButton === 'content_repositori_content_checkbox_view_remove'}\n                  />\n                </div>\n                <div className={view ? 'content_repositori_text' : 'content_repositori_text_view'}>\n                  <p className=\"content_repositori_text_name\">{key.name}</p>\n                  <p className=\"content_repositori_text_description\">{key.description}</p>\n                  <p className=\"content_repositori_text_language\">{key.language}</p>\n                </div>\n              </div>\n              <div className={view ? 'content_repositori_star' : 'content_repositori_star_view'}>\n                <div className=\"content_repositori_star_icon\">\n                  <i className=\"fas fa-star\" />\n                  <div className=\"content_repositori_star_icon_text\">25k</div>\n                </div>\n                <p className={view ? 'content_repositori_star_language' : 'content_repositori_star_language_view'}>{key.language}</p>\n              </div>\n            </div>\n          );\n        })}\n\n        {tr && testStore.search.length === 0 && (\n          <div className=\"notFound\">\n            <h1 className=\"notFound_h\">NO RESULTS FOUND</h1>\n            <p className=\"notFound_p\">select other parameters and try again</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    testStore: state,\n  }),\n)(Search);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst MyList = (props) => {\n  const { testStore } = props;\n  const { dispatch } = props;\n\n  const [view, setView] = useState(true);\n  const [test, setTest] = useState(false);\n\n  const addToList = (key) => {\n    const object = key;\n    for (let i = 0; i < testStore.list.length; i += 1) {\n      if (testStore.list[i].id === key.id) {\n        dispatch({\n          type: 'DEL_REP',\n          payload: i,\n        });\n        setTest(!test);\n        return 0;\n      }\n    }\n    dispatch({\n      type: 'ADD_REP',\n      payload: object,\n    });\n    setTest(!test);\n    return 0;\n  };\n\n  const checkList = (key) => {\n    let classButton = 'content_repositori_content_checkbox_view';\n    for (let i = 0; i < testStore.list.length; i += 1) {\n      if (Number(testStore.list[i].id) === Number(key.id)) {\n        classButton = 'content_repositori_content_checkbox_view_remove';\n      }\n    }\n    return classButton;\n  };\n\n  return (\n    <div>\n      <h1 className=\"myList_text\">My List</h1>\n      <div className=\"view\">\n        <button type=\"button\" aria-label=\"Mute volume\" id=\"largeBtn\" className={view ? 'fas fa-th-large' : 'fas fa-th-large fa_th_large'} onClick={() => setView(false)} />\n        <button type=\"button\" aria-label=\"Mute volume\" id=\"barsBtn\" className={view ? 'fas fa-bars fa_bars' : 'fas fa-bars'} onClick={() => setView(true)} />\n      </div>\n\n      <div className=\"content\">\n        {testStore.list.map((key) => {\n          const classButton = checkList(key);\n          return (\n            <div className={view ? 'content_repositori' : 'content_repositori_view'}>\n              <div className={view ? 'content_repositori_content' : 'content_repositori_content_view'}>\n                <div className={view ? 'content_repositori_content_input' : 'content_repositori_content_input_view'}>\n                  <input\n                    type={view ? 'checkbox' : 'button'}\n                    id={key.id}\n                    className={view ? 'content_repositori_content_checkbox' : classButton}\n                    onClick={() => addToList(key)}\n                    value={classButton === 'content_repositori_content_checkbox_view_remove' ? 'REMOVE ITEM' : 'ADD TO LIST'}\n                    checked={classButton === 'content_repositori_content_checkbox_view_remove'}\n                  />\n                </div>\n                <div className={view ? 'content_repositori_text' : 'content_repositori_text_view'}>\n                  <p className=\"content_repositori_text_name\">{key.name}</p>\n                  <p className=\"content_repositori_text_description\">{key.description}</p>\n                  <p className=\"content_repositori_text_language\">{key.language}</p>\n                </div>\n              </div>\n              <div className={view ? 'content_repositori_star' : 'content_repositori_star_view'}>\n                <div className=\"content_repositori_star_icon\">\n                  <i className=\"fas fa-star\" />\n                  <div className=\"content_repositori_star_icon_text\">25k</div>\n                </div>\n                <p className={view ? 'content_repositori_star_language' : 'content_repositori_star_language_view'}>{key.language}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    testStore: state,\n  }),\n)(MyList);\n","import React from 'react';\nimport './app.css';\nimport './style/view.css';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from './components/header';\nimport Search from './components/search';\nimport MyList from './components/my_list';\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"App\">\n      <Header />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/my-list\" component={MyList} />\n    </div>\n  </BrowserRouter>\n);\n\nexport default connect(\n  (state) => ({\n    testStore: state,\n  }),\n)(App);\n","import { createStore } from 'redux';\n\nfunction repList(state = { search: [], list: [] }, action) {\n  const newState = state;\n  if (action.type === 'ADD_REP') {\n    newState.list.push(action.payload);\n  }\n  if (action.type === 'DEL_REP') {\n    newState.list.splice(action.payload, 1);\n  }\n  if (action.type === 'SEARCH') {\n    newState.search = action.payload;\n  }\n\n  return newState;\n}\n\nconst store = createStore(repList);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}